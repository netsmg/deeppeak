---
import { markdownify } from "@/lib/utils/textConverter";
import type { Button } from "@/types";
import { getEntry } from "astro:content";

interface CallToAction {
  enable: boolean;
  title: string;
  description: string;
  button: Button;
  image: string;
}

const { enable, title, description, button }: CallToAction = (
  await getEntry("sections", "call-to-action")
).data;
---

{
  enable && (
    <section class="pt-16 xl:pt-24 bg-theme-dark">
      <div class="container">
        <div class="row items-center justify-center">
          <div class="xl:col-8 lg:col-10 text-center">
            <h2
              set:html={markdownify(title)}
              class="text-light mb-4"
              data-aos="fade-up-sm"
            />
            <p
              set:html={markdownify(description)}
              class="text-light/70 text-lg/inherit mb-6"
              data-aos="fade-up-sm"
              data-aos-delay="50"
            />
            {button.enable && (
              <div data-aos="fade-up-sm" data-aos-delay="200">
                <a
                  class="btn btn-primary hover-transparent"
                  href={button.link}
                  target={button.link.startsWith("http") ? "_blank" : "_self"}
                  rel="noopener">
                  {button.label}
                </a>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  )
}
