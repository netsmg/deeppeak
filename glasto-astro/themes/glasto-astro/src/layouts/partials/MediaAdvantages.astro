---
import ImageMod from "@/components/ImageMod.astro";
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";

interface Faq {
  title: string;
  image: string;
  bg_image: string;
  exclusive_open: boolean;
  exclusive_open_group: string;
  description: string;
  list: {
    icon: string;
    title: string;
    description: string;
    active?: boolean;
  }[];
}

const {
  title,
  image,
  bg_image,
  description,
  exclusive_open,
  exclusive_open_group,
  list,
}: Faq = (await getEntry("sections", "media-advantages")).data;
---

{
  (
    <section class="section overflow-hidden bg-theme-light relative">
      <div class="container">
        <div
          aria-hidden="true"
          class="blur-[100px] pointer-events-none absolute z-0 h-[911px] w-[61%] -translate-x-2/4 left-2/4 bottom-0">
          <ImageMod
            class="w-full object-cover object-center h-full"
            src={bg_image}
            alt="banner gradient background"
          />
        </div>
        <div class="row">
          <div
            class="mx-auto text-center lg:col-10 xl:col-7"
            data-aos="fade-up-sm">
            {title && <h2 class="mb-6" set:html={markdownify(title)} />}
            {description && (
              <p class="text-lg/inherit" set:html={markdownify(description)} />
            )}
          </div>
          <div class="col-12 pt-20" data-aos="fade-up-sm" data-aos-delay={100}>
            <div class="row gx-4 gy-6 justify-center">
              <div class="lg:col-6">
                <div class="bg-violet-200 overflow-hidden rounded-2xl p-10 lg:pe-0 pb-0">
                  <ImageMod
                    class={
                      "md:h-[500px] h-[250px] rounded-tl-xl object-cover object-left-top"
                    }
                    src={image}
                    alt={title || "image"}
                  />
                </div>
              </div>
              <div class="lg:col-6">
                {list?.map((item) => (
                  <div
                    data-exclusive-open={`${exclusive_open}`}
                    data-accordion-group={exclusive_open_group}
                    class={`bg-white last:mb-0 mb-6 rounded-xl group`}>
                    {item.title && (
                      <details
                        class="group peer"
                        {...(item.active ? { open: true } : {})}>
                        <summary class="flex w-full cursor-pointer select-none gap-4 p-7 text-start text-xl group-[.active]:pb-0 font-semibold text-dark flex-row">
                          <ImageMod class="w-7" src={item.icon} alt="icon" />
                          <span set:html={item.title} />
                        </summary>
                      </details>
                    )}
                    {item.description && (
                      <div class="grid grid-rows-[0fr] transition-[grid-template-rows] duration-300 peer-open:grid-rows-[1fr]">
                        <div class="overflow-hidden">
                          <div
                            class="ps-[4.7rem] pe-8 pb-8"
                            set:html={markdownify(item.description)}
                          />
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
